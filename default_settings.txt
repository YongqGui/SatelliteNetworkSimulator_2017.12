#
# Default settings for the simulation
# 閫氫俊鑼冨洿range=6000銆佷紶杈撻�熷害speed=500銆佹秷鎭敓瀛樻椂闂磘tl=3
#

#User Setting
#dijsktra;
#userSetting.routerMode = AllConnected
userSetting.routerMode = Cluster

#simpleConnectivity;
#userSetting.routerMode = Cluster
#userSetting.hostsMode = cluster
userSetting.hostsMode = normal

#userSetting.nrofPlane = 3
userSetting.orbitPlaneAngle = 45

#缂撳瓨鐩稿叧鍙傛暟
userSetting.EnableCache = false
#userSetting.EnableCache = false
userSetting.RandomDropMessage = false
Group.nrofFile = 60
Group.filebuffersize = 1000k
#缂撳瓨鐩稿叧鍙傛暟

# 閾捐矾妯″潡閰嶇疆
# one satellite node can bind multiple interfaces
Group.nrofInterfaces = 1
Group.interface1 = Interface1
Group.interface2 = Interface2
Interface1.type = SimpleSatelliteInterface
Interface1.linkDelayRange = 0.1,1
Interface1.transmitSpeed = 500k
Interface1.transmitRange = 15000
Interface2.type = SatelliteLaserInterface
Interface2.linkDelayRange = 10,100
Interface2.transmitSpeed = 200M
Interface2.transmitRange = 20000

# 设置阈值，大于此阈值通过激光链路走，小于此阈值的从微波链路走
Interface.MessageThreshold = 1M
# 链路中断概率
Interface.enableInterrupt = false
Interface.probabilityOfInterrupt = 0.001
# 链路中断重传次数
Interface.reTransmitTime = 2
# 鏄惁鍏佽鍔ㄦ�佸垎绨�
Interface.DynamicClustering = true


#鍒嗙皣璺敱鐩稿叧鍙傛暟
#clusterCheckInterval unit:seconds
Group.clusterCheckInterval = 60
#bytes
Group.comfirmMessageSize = 1
#鍒嗙皣璺敱鐩稿叧鍙傛暟

# LEO鍗槦鑺傜偣鍙傛暟
Group.nrofCommunicationNodesInEachPlane = 4
Group.nrofLEO = 80
Group.nrofLEOPlanes = 8
Group.LEO_OrbitPlaneAngle = 60
Group.LEO_Eccentricity = 0
Group.LEO_Radius = 500


# MEO鍗槦鑺傜偣鍙傛暟
Group.EnableMEO = true
Group.MEO_OrbitPlaneAngle = 60
Group.MEO_Radius = 12000
Group.nrofMEO = 16
Group.nrofMEOPlane = 4
Group.MEO_Eccentricity = 0

# GEO鍗槦鑺傜偣鍙傛暟
Group.EnableGEO = false
Group.GEO_OrbitPlaneAngle = 60
Group.GEO_Radius = 35786
Group.nrofGEO = 6
Group.nrofGEOPlane = 3
Group.GEO_Eccentricity = 0


# Define 6 different node groups
Scenario.nrofHostGroups = 1

## Scenario settings
Scenario.name = satellite network simulation
Scenario.simulateConnections = true
Scenario.updateInterval = 1
# 43200s == 12h
Scenario.endTime = 1600


## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
#Interface.type = SimpleSatelliteInterface


# Transmit speed of 2 Mbps = 250kBps
Interface.transmitSpeed = 250k
#娉ㄦ剰锛歄NE涓窛绂诲崟浣嶆槸meters
#鐢变簬JAT涓窛绂诲崟浣嶄负km锛屽洜姝ゆ垜浠皢ONE涓殑璺濈鍗曚綅缁熶竴瑙嗕负km锛岃繖鏍峰彧浼氬湪鑷甫鐨勫浘褰㈢晫闈㈠崟浣嶄笂浜х敓璇В锛屼絾鍐呴儴绋嬪簭鐨勯�昏緫涓婃病鏈夐棶棰�
#Interface.transmitRange = 2000

# 鐢ㄤ簬寤虹珛閾捐矾娴嬭瘯锛屾彁楂橀摼璺缓绔嬫鐜�
Interface.transmitRange = 4000


## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement



# Common settings for all groups
#Group.movementModel = PredictableMovement鑷繁鍒涘缓鐨勬柊杩愬姩妯″瀷锛岄噷闈㈠嚱鏁版殏鏃跺潎娌℃湁璋冪敤
Group.movementModel =  SatelliteMovement
#Group.movementModel =  StationaryMovement
#Group.nodeLocation=[0,3000; 0,2000]

#鏄惁鍚敤澶氱嚎绋�
userSetting.multiThread = false

#鑺傜偣闂撮摼璺洿鏂版椂锛岃绠楁ā寮忛�夋嫨
#MovementModel.judgeNearInterfaceMode = Fast-Grid
MovementModel.judgeNearInterfaceMode = Ergodic

#1 random, 2, FIFO
Group.sendQueue = 2




#comfirmTtl涓庢洿鏂伴棿闅旀椂闂碝EOCheckInterval锛�2鑰呰涓�10鍒嗕箣涓�鐨勫叧绯�
#鍦╩essage鍑芥暟涓璗TL璁＄畻鏄互涓�鍒嗛挓涓哄崟浣�
Group.comfirmTtl = 1
Group.MEOCheckInterval = 60

#unit:minutes
Group.HelloInterval = 2
Group.HelloTTL = 1
Group.HelloMessageSize = 1

#WalkerStar-鏋佽建閬�
#Group.Constellation = WalkerStar
#WalkerDelta-鍊炬枩杞ㄩ亾
Group.Constellation = WalkerDelta

#router璺敱鑷繁鍒涘缓
#Group.router = FirstContactRouter
#Group.router = DirectDeliveryRouter
#Group.router = EpidemicRouter

#Group.router = NetGridRouter
#Group.router = TwoLayerRouterBasedonGridRouter
#Group.router = DijsktraSearchBasedonTemporalGraph
#Group.router = SPNR
#Group.router = SPNRmodify
#Group.router = SourceRoutingDijsktraSearchBasedonTemporalGraph

#Group.router = DirectDeliveryRouter
Group.router = ShortestPathFirstRouter
#Group.router = OptimizedClusteringRouter
Group.router = DynamicMultiLayerSatelliteRouter
DynamicMultiLayerSatelliteRouter.Optimized = false

#鍒嗙皣璺敱
#Group.router = ClusteringRouter
#瀵逛簬缃戞牸璺敱鐨勮绠楁ā寮�
#Group.router = NetGridRouter
#Group.gridUpdateOption = preOrbitCalculation
#Group.gridUpdateOption = onlineOrbitCalculation

Group.layer = 1
#Group.Pre_or_onlineOrbitCalculation = preOrbitCalculation
Group.Pre_or_onlineOrbitCalculation = onlineOrbitCalculation
#Group.router = SPNRmodify
#Group.router = CGR
Group.router.CGR.linkDuration = 3
Group.router.CGR.type = NoPreContactPlanDesign
#LinkDuration涔樹互updateInterval涓虹湡瀹為摼璺寔缁椂闂�
Group.router.CGRLinkDurationTimesOfUpdateInterval = 10

#Group.router = DijsktraRouter
Group.msgPathLabel = true

Group.bufferSize = 1000M
Group.waitTime = 0, 120


# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 10


#Group.nrofHosts = [10;20;30;40;50]
Group.nrofHosts = 96

# group1 (pedestrians) specific settings
Group1.groupID = Node



## Message creation parameters 
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
#Events1.class = MessageCreateEvent
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
#Events1.interval = 1,100
Events1.interval = 1,1
# Message sizes (500kB - 1MB)

#Events1.size = 100k,1M
Events1.size = 10k,2000k
# range of message source/destination addresses

#Events1.hosts = [0,9;0,19;0,29;0,39;0,49]修改，注意hosts和tohosts包括下界但不包括上界，即[0, 9)
Events1.hosts = [0,80]
# Message ID prefix
Events1.prefix = M


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 100000, 100000, 100000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 10


## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 6
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = MessageDelayReport
Report.report3 = DeliveredMessagesReport
Report.report4 = CreatedMessagesReport
Report.report5 = ContactTimesReport
Report.report6 = MessageReport


## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true


## Optimization settings -- these affect the speed of the simulation
## see World class for details.
#鍦╳orld.java涓殑initSettings鍑芥暟涓鍙�
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true

## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 104.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 30
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$